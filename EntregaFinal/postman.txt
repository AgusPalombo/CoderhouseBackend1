Base de datos: mongodb://localhost:27017/tienda

use tienda

CHEQUEAR QUE LA PRECARGA HAYA SIDO EXISTOSA:
db.products.find()

Endpoints para Carritos
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1. GET General
Método: GET
URL: /api/products
Descripción: Este endpoint devuelve una lista de todos los productos en la base de datos. Si no hay productos, devolverá una lista vacía.


2. GET con Query Params
Método: GET
http://localhost:3000
/api/products?limit=2&page=1&sort=asc&query=Camiseta
/api/products?limit=3&page=1&sort=desc&query=Gafas
/api/products?limit=5&page=1
/api/products?limit=1&page=1&sort=asc&category=Calzado
/api/products?limit=2&page=1&price=30


3. Ejemplo Crear un nuevo producto
Método: POST
URL: /api/products
Body (JSON):
{
  "title": "Nombre del Producto",
  "description": "Descripción del Producto",
  "price": 100,
  "stock": 50,
  "category": "Categoría del Producto",
  "thumbnails": ["url1", "url2"]
}


4.Actualizar un producto existente

Método: PUT
URL: /api/products/:pid
Body (JSON):
{
  "title": "Nuevo Nombre del Producto",
  "description": "Nueva Descripción",
  "price": 120,
  "stock": 30,
  "category": "Nueva Categoría",
  "thumbnails": ["url1", "url2"]
}



5. Eliminar un producto por ID
Método: DELETE
URL: /api/products/:pid
Descripción: Elimina un producto específico por su ID.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



Endpoints para Carritos
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

1.Crear un nuevo carrito

Método: POST
URL: /api/carts
Body (JSON):{}



2.Obtener todos los carritos
Método: GET
URL: /api/carts
Descripción: Obtiene todos los carritos existentes.
Obtener un carrito por ID



3. Obtener un carrito según ID
Método: GET
URL: /api/carts/:cid
Descripción: Obtiene un carrito específico por su ID.
Agregar un producto al carrito



4. Agregar un producto al carrito
Método: POST
URL: /api/carts/:cid/products
Body (JSON):

{
    "productId": "6716a1f8d5dea42e93e62a9e",
    "quantity": 2
}



5.Actualizar la cantidad de un producto en el carrito

Método: PUT
URL: /api/carts/:cid/products/:pid
Body (JSON):

{
  "quantity": 5 
}



6.Eliminar un producto del carrito

Método: DELETE
URL: /api/carts/:cid/products/:pid
Descripción: Elimina un producto específico del carrito por su ID.


7.Limpiar el carrito
Método: DELETE
URL:/api/carts/:cid/clean
Descripción: Elimina todos los productos del carrito



8.Eliminar un carrito
Método: DELETE
URL: /api/carts/:cid
Descripción: Elimina el carrito con dicho ID.




9.Eliminar todos los productos del carrito
Método: DELETE
URL: /api/carts/:cid/clean
Descripción: Elimina todos los productos del carrito específico.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------