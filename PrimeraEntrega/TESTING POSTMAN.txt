Rutas para Productos
1. Listar todos los productos (GET)
Método: GET
URL: http://localhost:8080/api/products
Ejemplo de respuesta:

json
Copiar código
[
  {
    "id": 1,
    "title": "Producto 1",
    "description": "Descripción del producto 1",
    "code": "P001",
    "price": 100,
    "status": true,
    "stock": 10,
    "category": "Categoria 1",
    "thumbnails": []
  },
  {
    "id": 2,
    "title": "Producto 2",
    "description": "Descripción del producto 2",
    "code": "P002",
    "price": 150,
    "status": true,
    "stock": 5,
    "category": "Categoria 2",
    "thumbnails": ["imagen1.jpg", "imagen2.jpg"]
  }
]
2. Obtener un producto por ID (GET)
Método: GET
URL: http://localhost:8080/api/products/1
Ejemplo de respuesta:

json
Copiar código
{
  "id": 1,
  "title": "Producto 1",
  "description": "Descripción del producto 1",
  "code": "P001",
  "price": 100,
  "status": true,
  "stock": 10,
  "category": "Categoria 1",
  "thumbnails": []
}



-----------------------------------------------------------------------------------------------------------------

3. Agregar un nuevo producto (POST)
Método: POST
URL: http://localhost:8080/api/products
Body: raw y JSON
Ejemplo de Body:


{
  "title": "Nuevo Producto",
  "description": "Descripción del nuevo producto",
  "code": "P003",
  "price": 200,
  "stock": 20,
  "category": "Categoria 3",
  "thumbnails": ["imagen3.jpg"]
}


Ejemplo de respuesta:

{
  "message": "Producto agregado correctamente",
  "product": {
    "id": 3,
    "title": "Nuevo Producto",
    "description": "Descripción del nuevo producto",
    "code": "P003",
    "price": 200,
    "status": true,
    "stock": 20,
    "category": "Categoria 3",
    "thumbnails": ["imagen3.jpg"]
  }
}

-----------------------------------------------------------------------------------------------------------------

4. Actualizar un producto por ID (PUT)
Método: PUT
URL: http://localhost:8080/api/products/1
Body: raw y JSON
Ejemplo de Body:

json
Copiar código
{
  "title": "Producto 1 Actualizado",
  "description": "Nueva descripción del producto 1",
  "price": 120,
  "stock": 8
}


Ejemplo de respuesta:


{
  "message": "Producto actualizado correctamente",
  "product": {
    "id": 1,
    "title": "Producto 1 Actualizado",
    "description": "Nueva descripción del producto 1",
    "code": "P001",
    "price": 120,
    "status": true,
    "stock": 8,
    "category": "Categoria 1",
    "thumbnails": []
  }
}
5. Eliminar un producto por ID (DELETE)
Método: DELETE
URL: http://localhost:8080/api/products/1
Ejemplo de respuesta:

json
Copiar código
{
  "message": "Producto eliminado correctamente"
}


-----------------------------------------------------------------------------------------------------------------

Rutas para Carritos

-----------------------------------------------------------------------------------------------------------------
1. Crear un nuevo carrito (POST)
Método: POST
URL: http://localhost:8080/api/carts
Body: raw y JSON
Ejemplo de Body:
{
  "products": []
}
Ejemplo de respuesta:

json
Copiar código
{
  "message": "Carrito creado correctamente",
  "cart": {
    "id": 1,
    "products": []
  }
}

-----------------------------------------------------------------------------------------------------------------

2. Obtener los productos de un carrito por ID (GET)
Método: GET
URL: http://localhost:8080/api/carts/1
Ejemplo de respuesta:

{
  "id": 1,
  "products": [
    {
      "product": 1,
      "quantity": 2
    },
    {
      "product": 2,
      "quantity": 1
    }
  ]
}

-----------------------------------------------------------------------------------------------------------------

3. Agregar un producto al carrito (POST)
Método: POST
URL: http://localhost:8080/api/carts/1/product/1
Ejemplo de respuesta:


{
  "message": "Producto agregado al carrito correctamente",
  "cart": {
    "id": 1,
    "products": [
      {
        "product": 1,
        "quantity": 1
      }
    ]
  }
}
Si el producto ya está en el carrito, la cantidad se incrementará en lugar de agregarse de nuevo.